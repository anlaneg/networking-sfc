[tox]
envlist = py35,py34,py27,pep8,pylint
minversion = 1.6
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = sh
commands =
  sh tools/pretty_tox.sh '{posargs}'
# there is also secret magic in pretty_tox.sh which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:functional]
setenv = OS_TEST_PATH=./networking_sfc/tests/functional
commands =
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:dsvm-functional]
setenv = OS_TEST_PATH=./networking_sfc/tests/functional
         OS_SUDO_TESTING=1
         OS_ROOTWRAP_CMD=sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf
         OS_FAIL_ON_MISSING_DEPS=1
sitepackages=True
commands =
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:pep8]
commands =
  flake8
  {toxinidir}/tools/check_unit_test_structure.sh
  neutron-db-manage --subproject networking-sfc --database-connection sqlite:// check_migration
whitelist_externals = sh

[testenv:cover]
commands =
  python setup.py test --coverage --coverage-package-name=networking_sfc --testr-args='{posargs}'

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:py34]
commands = python -m testtools.run

[flake8]
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed
ignore = N530
show-source = true
builtins = _
exclude=.venv,.git,.tox,dist,doc,src,tools,networking_sfc/db/migration/alembic_migrations/versions

[testenv:pylint]
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:networking_sfc}

[hacking]
import_exceptions = networking_sfc._i18n
local-check-factory = neutron_lib.hacking.checks.factory

[testenv:api-ref]
# This environment is called from CI scripts to test and publish
# the API Ref to developer.openstack.org.
# NOTE(sdague): this target does not use constraints because
# upstream infra does not yet support it. Once that's fixed, we can
# drop the install_command.
#
# we do not used -W here because we are doing some slightly tricky
# things to build a single page document, and as such, we are ok
# ignoring the duplicate stanzas warning.
install_command = pip install -U --force-reinstall {opts} {packages}
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

